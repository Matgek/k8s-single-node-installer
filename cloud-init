#!/usr/bin/env bash

if [ -f ./user-data ]; then
  echo "user-data file exists"
else
  wget http://169.254.169.254/latest/user-data
fi

. ./user-data

if [ $? = 0 ]; then
  if [[ ! -z $MAINTENANCE_MODE && $MAINTENANCE_MODE == true ]]; then
    echo "Exiting script"
    exit 0
  fi
  if [[ ! -z $CF_HELM_CHANNEL && $CF_HELM_CHANNEL == 'dev' ]]; then
    export CF_HELM_CHANNEL=dev
    echo "Exporting CF_HELM_CHANNEL"
  fi
else
  echo "Unable to read user-data file"
  exit 1
fi

BRANCH=${BRANCH:-master}
WORKING_DIR="/opt/codefresh"
LOG_DIR="${WORKING_DIR}/logs"

mkdir -p ${LOG_DIR}

#start bootstrap
wget https://raw.githubusercontent.com/codefresh-io/k8s-single-node-installer/$BRANCH/images
wget https://raw.githubusercontent.com/codefresh-io/k8s-single-node-installer/$BRANCH/bootstraper
wget https://raw.githubusercontent.com/codefresh-io/k8s-single-node-installer/$BRANCH/cf-helm-ami
wget https://raw.githubusercontent.com/codefresh-io/k8s-single-node-installer/$BRANCH/installer
wget https://raw.githubusercontent.com/codefresh-io/k8s-single-node-installer/$BRANCH/flannel.yml
wget https://raw.githubusercontent.com/codefresh-io/k8s-single-node-installer/$BRANCH/local-storage.yml

chmod +x bootstraper
chmod +x installer
chmod +x cf-helm-ami

# install and run k8s
EXTERNAL=true ./installer | tee >> ${LOG_DIR}/installer.log
mkdir /root/.kube && cp /etc/kubernetes/admin.conf /root/.kube/config

export KUBECONFIG=/root/.kube/config

# run bootstraper
${WORKING_DIR}/bootstraper >> ${LOG_DIR}/bootstraper.log 2>&1 &

# run helm-updater
${WORKING_DIR}/cf-helm-ami >> ${LOG_DIR}/cf-helm.log 2>&1 &

# add to rc.local cf-helm-ami
cat << EOF > /etc/rc.local
#!/bin/bash
export KUBECONFIG=/root/.kube/config
${WORKING_DIR}/bootstraper >> ${LOG_DIR}/bootstraper.log 2>&1 &
${WORKING_DIR}/cf-helm-ami >> ${LOG_DIR}/cf-helm.log 2>&1 &

exit 0
EOF

# run wizard
docker pull codefresh/enterprise-installer:master
docker run --name wizard --restart="always" -d -p 8080:9000 -v /opt/codefresh:/opt/codefresh codefresh/enterprise-installer:master

